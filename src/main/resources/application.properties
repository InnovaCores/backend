# Spring Application Name
spring.application.name=managecores-backend

# Spring DataSource Configuration
###    JDBC : SGDB :// HOST : PORT / DB
spring.datasource.url: jdbc:postgresql://localhost:5432/managecores

##para render
##spring.datasource.url: ${DB_URL}

spring.datasource.username: postgres
##spring.datasource.username: ${DB_USERNAME}
# Change this password to your own
spring.datasource.password: 2102
##spring.datasource.password: ${DB_PASSWORD}

spring.datasource.driver-class-name: org.postgresql.Driver

# Spring Data JPA Configuration
spring.jpa.database: postgresql
spring.jpa.show-sql: true

# Spring Data JPA Hibernate Configuration
spring.jpa.hibernate.ddl-auto: update
spring.jpa.open-in-view=true
spring.jpa.properties.hibernate.format_sql: true
spring.jpa.properties.hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.naming.physical-strategy=pe.edu.upc.managewise.backend.shared.infrastructure.persistence.jpa.configuration.strategy.SnakeCaseWithPluralizedTablePhysicalNamingStrategy

server.port: 8090
##server.port: ${PORT:8080}
#*****************iam************************(cuando ponemos el IAM se quita los comentarios(31,32,35)

# Application Information for Documentation

# Elements take their values from maven pom.xml build-related information
#documentation.application.description=@project.description@
#documentation.application.version=@project.version@

# JWT Configuration Properties
#authorization.jwt.secret = WriteHereYourSecretStringForTokenSigningCredentials
#authorization.jwt.expiration.days = 7

#*****************iam************************

##para render luego de poner los ${XX} pones esto en la consola
##.\mvnw clean package -DskipTests
